# This is a basic workflow to help you get started with Actions

name: run the workflow

# Controls when the workflow will run
on:
 pull_request:
    branches: [ main ]
      
 workflow_run:
    workflows: ["Build and Deploy to Sandbox"]
    types:
      - completed
      
 repository_dispatch:
    types: [my-event, my-event1, my-event2]

jobs:
  build:
    name: run-workflow
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          repository: SAURABH-BIRAMWAR/upload_artifact_private_repository 
          ref: main
          token: ${{ secrets.PAT }} 

      - uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      
#       - name: Download artifact
#         uses: actions/download-artifact@v2
#         with:
#           name: my-app
#           path: artifacts/my-app.jar

      - name: Present working directory
        run: pwd
    
#       - uses: actions/download-artifact@v2
#         with:
#           name: artifacts
# #           repository: SAURABH-BIRAMWAR/upload_artifact_private_repository
#           path: /home/runner/work/Test_private_repo/Test_private_repo/
#         env:
#          PAT: ${{ secrets.PAT }}
# #           repository: SAURABH-BIRAMWAR/upload_artifact_private_repository 
# #           ref: main
# #           token: ${{ secrets.PAT }}        
          
      - name: List downloaded artifact
        run: |
          ls /home/runner/work/Test_private_repo/Test_private_repo/
      #    ls target/*.jar
          
      - name: print trigger details
        run: |
          echo ${{ github.event.client_payload.github.action }}
          echo ${{ github.event.client_payload.github.actor }}
       
      - name: List artifact           
        run: |
          
            curl -L \
               -H "Accept: application/vnd.github+json" \
               -H "Authorization: Bearer ${{ secrets.MY_SECRET }}"\
               -H "X-GitHub-Api-Version: 2022-11-28" \
                https://api.github.com/repos/SAURABH-BIRAMWAR/upload_artifact_private_repository/actions/artifacts
            
      - name: Get an artifact
        run: |
            curl -L \
               -H "Accept: application/vnd.github+json" \
               -H "Authorization: Bearer ${{ secrets.MY_SECRET }}"\
               -H "X-GitHub-Api-Version: 2022-11-28" \
               https://api.github.com/repos/SAURABH-BIRAMWAR/upload_artifact_private_repository/actions/artifacts/635688298
               
      - name: Download an artifact
        run: |  
            curl -L \
               -H "Accept: application/vnd.github+json" \
               -H "Authorization: Bearer ${{ secrets.MY_SECRET }}"\
               -H "X-GitHub-Api-Version: 2022-11-28" \
               https://api.github.com/repos/SAURABH-BIRAMWAR/upload_artifact_private_repository/actions/artifacts/635688298/zip \
               --output artifact.zip
               
      - name: List Files
        run: |  
            pwd
            ls -la
            
      - name: Latest Artifact
        run: |
      
          # Get the list of artifacts for the repository
          ARTIFACTS=$(curl -s -H "Accept: application/vnd.github+json" \
              -H "Authorization: Bearer ${{ secrets.MY_SECRET }}" \
              -H "X-GitHub-Api-Version: 2022-11-28" \
              https://api.github.com/repos/SAURABH-BIRAMWAR/upload_artifact_private_repository/actions/artifacts)

          # Extract the latest artifact ID from the list
          LATEST_ARTIFACT_ID=$(echo "$ARTIFACTS" | jq -r '.artifacts[0].id')
          
          echo $LATEST_ARTIFACT_ID

          # Download the latest artifact
          curl -L \
               -H "Accept: application/vnd.github+json" \
               -H "Authorization: Bearer ${{ secrets.MY_SECRET }}" \
               -H "X-GitHub-Api-Version: 2022-11-28" \
               https://api.github.com/repos/SAURABH-BIRAMWAR/upload_artifact_private_repository/actions/artifacts/${LATEST_ARTIFACT_ID}/zip \
               --output artifact.zip
               
          echo{"Unzip the downloaded artifact"}
          unzip -q *.zip       
          
          echo{"Delete the zip artifact"}
          rm *.zip
               
      - name: List Files
        run: |  
            pwd
            ls -la  

          
         
